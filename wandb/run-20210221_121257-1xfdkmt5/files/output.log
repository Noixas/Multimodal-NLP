21/02/2021 12:13:00 PM : INFO - Data path checked..
21/02/2021 12:13:00 PM : INFO - Model save path checked..
21/02/2021 12:13:00 PM : INFO - config JSON path checked..

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 
21/02/2021 12:13:00 PM : INFO - Tensorboard Visualization path checked..
21/02/2021 12:13:00 PM : INFO - Cleaning Visualization path of older tensorboard files...


data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 3
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
filter text True
Confounders upsampled by 3 times. 
 From 750  samples to 2250
Saved confounder samples to: 
./dataset/train_upsampled_confounders_3x_times.jsonl
Loaded dataset contains  10750 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
21/02/2021 12:13:09 PM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
21/02/2021 12:13:09 PM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear_1): Linear(in_features=768, out_features=384, bias=True)
  (activation): ReLU()
  (linear_2): Linear(in_features=384, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-21 12:13:12.833872 

21/02/2021 12:16:34 PM : INFO - New High Score! Saving model...

Epoch: 1/30,            
train_loss = 0.6065,  train_acc = 0.6730,  train_prec = 0.0831,  train_recall = 0.2515,  train_f1 = 0.1250,  train_aucroc = 0.5553,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7301,  eval_acc = 0.5060,  eval_prec = 0.0000,  eval_recall = nan,  eval_f1 = nan,  eval_aucroc = 0.6537,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002016
Elapsed Time:  00:03:22.02
21/02/2021 12:16:36 PM : INFO - current patience: 0

Epoch: 2/30,            
train_loss = 0.4549,  train_acc = 0.7915,  train_prec = 0.4866,  train_recall = 0.6801,  train_f1 = 0.5673,  train_aucroc = 0.8149,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.6658,  eval_acc = 0.6600,  eval_prec = 0.5263,  eval_recall = 0.7104,  eval_f1 = 0.6047,  eval_aucroc = 0.7359,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002999
Elapsed Time:  00:06:45.2521/02/2021 12:19:58 PM : INFO - New High Score! Saving model...

21/02/2021 12:19:59 PM : INFO - current patience: 0

Epoch: 3/30,            
train_loss = 0.2736,  train_acc = 0.8899,  train_prec = 0.7751,  train_recall = 0.8225,  train_f1 = 0.7981,  train_aucroc = 0.9399,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7937,  eval_acc = 0.6880,  eval_prec = 0.5466,  eval_recall = 0.7542,  eval_f1 = 0.6338,  eval_aucroc = 0.7758,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002995
Elapsed Time:  00:10:06.7421/02/2021 12:23:19 PM : INFO - New High Score! Saving model...

21/02/2021 12:23:21 PM : INFO - current patience: 0

Epoch: 4/30,            
train_loss = 0.1410,  train_acc = 0.9484,  train_prec = 0.9066,  train_recall = 0.9093,  train_f1 = 0.9079,  train_aucroc = 0.9831,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.0863,  eval_acc = 0.6740,  eval_prec = 0.4939,  eval_recall = 0.7625,  eval_f1 = 0.5995,  eval_aucroc = 0.7501,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002986
Elapsed Time:  00:13:31.77
21/02/2021 12:26:44 PM : INFO - current patience: 1

Epoch: 5/30,            
train_loss = 0.0962,  train_acc = 0.9688,  train_prec = 0.9427,  train_recall = 0.9461,  train_f1 = 0.9444,  train_aucroc = 0.9907,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1585,  eval_acc = 0.6700,  eval_prec = 0.5142,  eval_recall = 0.7384,  eval_f1 = 0.6062,  eval_aucroc = 0.7734,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002973
Elapsed Time:  00:16:49.83
21/02/2021 12:30:02 PM : INFO - current patience: 2

Epoch: 6/30,            
train_loss = 0.0769,  train_acc = 0.9751,  train_prec = 0.9550,  train_recall = 0.9562,  train_f1 = 0.9556,  train_aucroc = 0.9938,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.0523,  eval_acc = 0.7000,  eval_prec = 0.5709,  eval_recall = 0.7622,  eval_f1 = 0.6528,  eval_aucroc = 0.7828,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002956
Elapsed Time:  00:20:16.6321/02/2021 12:33:29 PM : INFO - New High Score! Saving model...

21/02/2021 12:33:30 PM : INFO - current patience: 0

Epoch: 7/30,            
train_loss = 0.0754,  train_acc = 0.9740,  train_prec = 0.9559,  train_recall = 0.9518,  train_f1 = 0.9539,  train_aucroc = 0.9948,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4972,  eval_acc = 0.6560,  eval_prec = 0.3927,  eval_recall = 0.8151,  eval_f1 = 0.5301,  eval_aucroc = 0.7794,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002935
Elapsed Time:  00:23:43.4621/02/2021 12:36:56 PM : INFO - current patience: 1


Epoch: 8/30,            
train_loss = 0.0580,  train_acc = 0.9823,  train_prec = 0.9672,  train_recall = 0.9698,  train_f1 = 0.9685,  train_aucroc = 0.9963,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4544,  eval_acc = 0.6580,  eval_prec = 0.4049,  eval_recall = 0.8065,  eval_f1 = 0.5391,  eval_aucroc = 0.7653,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002909
Elapsed Time:  00:27:08.7121/02/2021 12:40:21 PM : INFO - current patience: 2

21/02/2021 12:43:45 PM : INFO - current patience: 3

Epoch: 9/30,            
train_loss = 0.0615,  train_acc = 0.9794,  train_prec = 0.9632,  train_recall = 0.9636,  train_f1 = 0.9634,  train_aucroc = 0.9966,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3939,  eval_acc = 0.6960,  eval_prec = 0.5142,  eval_recall = 0.7987,  eval_f1 = 0.6256,  eval_aucroc = 0.7639,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002880
Elapsed Time:  00:30:33.01

Epoch: 10/30,            
train_loss = 0.0599,  train_acc = 0.9820,  train_prec = 0.9639,  train_recall = 0.9719,  train_f1 = 0.9679,  train_aucroc = 0.9957,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3590,  eval_acc = 0.6720,  eval_prec = 0.4939,  eval_recall = 0.7578,  eval_f1 = 0.5980,  eval_aucroc = 0.7580,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002846
Elapsed Time:  00:33:57.44
21/02/2021 12:47:10 PM : INFO - current patience: 4

Epoch: 11/30,            
train_loss = 0.0630,  train_acc = 0.9794,  train_prec = 0.9632,  train_recall = 0.9636,  train_f1 = 0.9634,  train_aucroc = 0.9967,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3717,  eval_acc = 0.6660,  eval_prec = 0.4615,  eval_recall = 0.7703,  eval_f1 = 0.5772,  eval_aucroc = 0.7521,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002809
Elapsed Time:  00:37:14.7521/02/2021 12:50:27 PM : INFO - current patience: 5
21/02/2021 12:50:27 PM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs


----------------------------------------------------------------------------------------------------

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 70.000
Val AUC-ROC of best model = 78.277
Val precision of best model = 57.085
Val recall of best model = 76.216
Val f1 of best model = 65.278

--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
21/02/2021 12:50:27 PM : INFO - Using UNITER model ./model_checkpoints/meme.pt
21/02/2021 12:50:28 PM : INFO - Exporting dev_seen predictions...
21/02/2021 12:50:31 PM : INFO - Finished export of dev_seen predictions
21/02/2021 12:50:31 PM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=70.00%)
21/02/2021 12:50:31 PM : INFO - Export and testing on test_seen...
21/02/2021 12:50:37 PM : INFO - Finished export of test predictions
