21/02/2021 05:23:52 PM : INFO - Data path checked..
21/02/2021 05:23:52 PM : INFO - Model save path checked..
21/02/2021 05:23:52 PM : INFO - config JSON path checked..

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 
21/02/2021 05:23:52 PM : INFO - Tensorboard Visualization path checked..
21/02/2021 05:23:52 PM : INFO - Cleaning Visualization path of older tensorboard files...


data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1.0
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
no_normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 3
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
filter text True
Confounders upsampled by 3 times. 
 From 1903  samples to 5709
Upsample both parts of confounders, hateful and non hateful - option 2
Saved confounder samples to: 
./dataset/train_upsampled_confounders_3x_times.jsonl
Loaded dataset contains  14209 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
21/02/2021 05:24:03 PM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
21/02/2021 05:24:03 PM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear_1): Linear(in_features=768, out_features=384, bias=True)
  (activation): ReLU()
  (linear_2): Linear(in_features=384, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-21 17:24:06.522194 

21/02/2021 05:28:21 PM : INFO - New High Score! Saving model...

Epoch: 1/30,            
train_loss = 0.6568,  train_acc = 0.5897,  train_prec = 0.4487,  train_recall = 0.5627,  train_f1 = 0.4993,  train_aucroc = 0.6277,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.6900,  eval_acc = 0.6420,  eval_prec = 0.5830,  eval_recall = 0.6545,  eval_f1 = 0.6167,  eval_aucroc = 0.6896,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002670
Elapsed Time:  00:04:14.85
21/02/2021 05:28:22 PM : INFO - current patience: 0

Epoch: 2/30,            
train_loss = 0.3696,  train_acc = 0.8429,  train_prec = 0.8106,  train_recall = 0.8394,  train_f1 = 0.8247,  train_aucroc = 0.9141,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7858,  eval_acc = 0.6660,  eval_prec = 0.4777,  eval_recall = 0.7564,  eval_f1 = 0.5856,  eval_aucroc = 0.7667,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002998
Elapsed Time:  00:08:34.0821/02/2021 05:32:40 PM : INFO - New High Score! Saving model...

21/02/2021 05:32:41 PM : INFO - current patience: 0

Epoch: 3/30,            
train_loss = 0.1615,  train_acc = 0.9431,  train_prec = 0.9342,  train_recall = 0.9405,  train_f1 = 0.9373,  train_aucroc = 0.9817,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.8803,  eval_acc = 0.6660,  eval_prec = 0.4211,  eval_recall = 0.8125,  eval_f1 = 0.5547,  eval_aucroc = 0.7518,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002992
Elapsed Time:  00:13:10.5821/02/2021 05:37:17 PM : INFO - current patience: 1


Epoch: 4/30,            
train_loss = 0.0919,  train_acc = 0.9711,  train_prec = 0.9668,  train_recall = 0.9697,  train_f1 = 0.9682,  train_aucroc = 0.9929,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1147,  eval_acc = 0.6720,  eval_prec = 0.4494,  eval_recall = 0.7986,  eval_f1 = 0.5751,  eval_aucroc = 0.7566,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002982
Elapsed Time:  00:17:49.8821/02/2021 05:41:56 PM : INFO - current patience: 2

21/02/2021 05:46:36 PM : INFO - New High Score! Saving model...

Epoch: 5/30,            
train_loss = 0.0725,  train_acc = 0.9771,  train_prec = 0.9741,  train_recall = 0.9757,  train_f1 = 0.9749,  train_aucroc = 0.9956,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3030,  eval_acc = 0.6660,  eval_prec = 0.4534,  eval_recall = 0.7778,  eval_f1 = 0.5729,  eval_aucroc = 0.7679,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002968
Elapsed Time:  00:22:30.22
21/02/2021 05:46:38 PM : INFO - current patience: 0

Epoch: 6/30,            
train_loss = 0.0665,  train_acc = 0.9793,  train_prec = 0.9775,  train_recall = 0.9772,  train_f1 = 0.9773,  train_aucroc = 0.9965,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.2560,  eval_acc = 0.6760,  eval_prec = 0.4534,  eval_recall = 0.8058,  eval_f1 = 0.5803,  eval_aucroc = 0.7844,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002949
Elapsed Time:  00:27:13.9421/02/2021 05:51:20 PM : INFO - New High Score! Saving model...

21/02/2021 05:51:21 PM : INFO - current patience: 0

Epoch: 7/30,            
train_loss = 0.0571,  train_acc = 0.9826,  train_prec = 0.9813,  train_recall = 0.9806,  train_f1 = 0.9809,  train_aucroc = 0.9973,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4702,  eval_acc = 0.6500,  eval_prec = 0.3927,  eval_recall = 0.7951,  eval_f1 = 0.5257,  eval_aucroc = 0.7584,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002927
Elapsed Time:  00:31:58.1721/02/2021 05:56:04 PM : INFO - current patience: 1


Epoch: 8/30,            
train_loss = 0.0798,  train_acc = 0.9749,  train_prec = 0.9719,  train_recall = 0.9731,  train_f1 = 0.9725,  train_aucroc = 0.9946,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4794,  eval_acc = 0.6640,  eval_prec = 0.4332,  eval_recall = 0.7926,  eval_f1 = 0.5602,  eval_aucroc = 0.7510,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002900
Elapsed Time:  00:36:37.5021/02/2021 06:00:44 PM : INFO - current patience: 2


Epoch: 9/30,            
train_loss = 0.0759,  train_acc = 0.9769,  train_prec = 0.9747,  train_recall = 0.9747,  train_f1 = 0.9747,  train_aucroc = 0.9948,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.2200,  eval_acc = 0.6600,  eval_prec = 0.5182,  eval_recall = 0.7151,  eval_f1 = 0.6009,  eval_aucroc = 0.7668,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002869
Elapsed Time:  00:41:16.87
21/02/2021 06:05:23 PM : INFO - current patience: 3

Epoch: 10/30,            
train_loss = 0.0636,  train_acc = 0.9792,  train_prec = 0.9801,  train_recall = 0.9744,  train_f1 = 0.9772,  train_aucroc = 0.9970,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.2351,  eval_acc = 0.6800,  eval_prec = 0.5668,  eval_recall = 0.7254,  eval_f1 = 0.6364,  eval_aucroc = 0.7320,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002835
Elapsed Time:  00:45:51.6121/02/2021 06:09:58 PM : INFO - current patience: 4


Epoch: 11/30,            
train_loss = 0.0565,  train_acc = 0.9818,  train_prec = 0.9795,  train_recall = 0.9805,  train_f1 = 0.9800,  train_aucroc = 0.9976,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3529,  eval_acc = 0.6220,  eval_prec = 0.3158,  eval_recall = 0.7959,  eval_f1 = 0.4522,  eval_aucroc = 0.7400,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002796
Elapsed Time:  00:50:10.2021/02/2021 06:14:16 PM : INFO - current patience: 5
21/02/2021 06:14:16 PM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs


----------------------------------------------------------------------------------------------------

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 67.600
Val AUC-ROC of best model = 78.442
Val precision of best model = 45.344
Val recall of best model = 80.576
Val f1 of best model = 58.031

--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
21/02/2021 06:14:16 PM : INFO - Using UNITER model ./model_checkpoints/meme.pt
21/02/2021 06:14:17 PM : INFO - Exporting dev_seen predictions...
21/02/2021 06:14:20 PM : INFO - Finished export of dev_seen predictions
21/02/2021 06:14:20 PM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=67.60%)
21/02/2021 06:14:20 PM : INFO - Export and testing on test_seen...
21/02/2021 06:14:27 PM : INFO - Finished export of test predictions
