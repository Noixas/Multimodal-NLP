21/02/2021 02:47:42 AM : INFO - Data path checked..

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 

data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 10
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
21/02/2021 02:47:42 AM : INFO - Model save path checked..
21/02/2021 02:47:42 AM : INFO - config JSON path checked..
21/02/2021 02:47:42 AM : INFO - Tensorboard Visualization path checked..
21/02/2021 02:47:42 AM : INFO - Cleaning Visualization path of older tensorboard files...

filter text True
Confounders upsampled by 10 times. 
 From 750  samples to 7500
Saved confounder samples to: 
./dataset/train_upsampled_confounders_10x_times.jsonl
Loaded dataset contains  16000 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
21/02/2021 02:47:54 AM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
21/02/2021 02:47:54 AM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear): Linear(in_features=768, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-21 02:47:58.073690 


Epoch: 1/30,            
train_loss = 0.4663,  train_acc = 0.8137,  train_prec = 0.0503,  train_recall = 0.5714,  train_f1 = 0.0925,  train_aucroc = 0.6423,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.9076,  eval_acc = 0.5480,  eval_prec = 0.1174,  eval_recall = 0.7838,  eval_f1 = 0.2042,  eval_aucroc = 0.6637,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00003000
Elapsed Time:  00:04:53.4221/02/2021 02:52:51 AM : INFO - New High Score! Saving model...

21/02/2021 02:52:52 AM : INFO - current patience: 0

Epoch: 2/30,            
train_loss = 0.3012,  train_acc = 0.8787,  train_prec = 0.5502,  train_recall = 0.7402,  train_f1 = 0.6312,  train_aucroc = 0.8892,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.8381,  eval_acc = 0.6400,  eval_prec = 0.4008,  eval_recall = 0.7557,  eval_f1 = 0.5238,  eval_aucroc = 0.7452,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002998
Elapsed Time:  00:09:59.5221/02/2021 02:57:57 AM : INFO - New High Score! Saving model...

21/02/2021 02:57:59 AM : INFO - current patience: 0

Epoch: 3/30,            
train_loss = 0.1673,  train_acc = 0.9386,  train_prec = 0.7999,  train_recall = 0.8647,  train_f1 = 0.8310,  train_aucroc = 0.9669,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.9491,  eval_acc = 0.6660,  eval_prec = 0.4008,  eval_recall = 0.8390,  eval_f1 = 0.5425,  eval_aucroc = 0.7499,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002992
Elapsed Time:  00:15:14.10
21/02/2021 03:03:12 AM : INFO - New High Score! Saving model...
21/02/2021 03:03:13 AM : INFO - current patience: 0

Epoch: 4/30,            
train_loss = 0.0959,  train_acc = 0.9671,  train_prec = 0.9029,  train_recall = 0.9209,  train_f1 = 0.9119,  train_aucroc = 0.9887,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1077,  eval_acc = 0.6740,  eval_prec = 0.5142,  eval_recall = 0.7471,  eval_f1 = 0.6091,  eval_aucroc = 0.7432,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002981
Elapsed Time:  00:20:29.3321/02/2021 03:08:27 AM : INFO - current patience: 1


Epoch: 5/30,            
train_loss = 0.0722,  train_acc = 0.9766,  train_prec = 0.9298,  train_recall = 0.9454,  train_f1 = 0.9375,  train_aucroc = 0.9933,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.5872,  eval_acc = 0.6540,  eval_prec = 0.4089,  eval_recall = 0.7891,  eval_f1 = 0.5387,  eval_aucroc = 0.7264,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002966
Elapsed Time:  00:25:43.38
21/02/2021 03:13:41 AM : INFO - current patience: 2

Epoch: 6/30,            
train_loss = 0.0647,  train_acc = 0.9783,  train_prec = 0.9371,  train_recall = 0.9474,  train_f1 = 0.9422,  train_aucroc = 0.9938,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.5924,  eval_acc = 0.6140,  eval_prec = 0.3441,  eval_recall = 0.7328,  eval_f1 = 0.4683,  eval_aucroc = 0.7111,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002947
Elapsed Time:  00:30:56.66
21/02/2021 03:18:54 AM : INFO - current patience: 3
21/02/2021 03:24:08 AM : INFO - current patience: 4

Epoch: 7/30,            
train_loss = 0.0634,  train_acc = 0.9793,  train_prec = 0.9404,  train_recall = 0.9492,  train_f1 = 0.9448,  train_aucroc = 0.9950,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.5533,  eval_acc = 0.6380,  eval_prec = 0.4332,  eval_recall = 0.7230,  eval_f1 = 0.5418,  eval_aucroc = 0.7297,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002924
Elapsed Time:  00:36:10.73

Epoch: 8/30,            
train_loss = 0.0597,  train_acc = 0.9815,  train_prec = 0.9447,  train_recall = 0.9567,  train_f1 = 0.9507,  train_aucroc = 0.9951,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.5939,  eval_acc = 0.6480,  eval_prec = 0.4291,  eval_recall = 0.7518,  eval_f1 = 0.5464,  eval_aucroc = 0.7190,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002897
Elapsed Time:  00:41:25.0021/02/2021 03:29:23 AM : INFO - current patience: 5


----------------------------------------------------------------------------------------------------

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 66.600
Val AUC-ROC of best model = 74.993
Val precision of best model = 40.081
Val recall of best model = 83.898
Val f1 of best model = 54.247

--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
21/02/2021 03:29:23 AM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs
21/02/2021 03:29:23 AM : INFO - Using UNITER model ./model_checkpoints/meme.pt
21/02/2021 03:29:24 AM : INFO - Exporting dev_seen predictions...
21/02/2021 03:29:27 AM : INFO - Finished export of dev_seen predictions
21/02/2021 03:29:27 AM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=66.60%)
21/02/2021 03:29:27 AM : INFO - Export and testing on test_seen...
21/02/2021 03:29:33 AM : INFO - Finished export of test predictions
