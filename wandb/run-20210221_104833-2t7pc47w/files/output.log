21/02/2021 10:48:34 AM : INFO - Data path checked..
21/02/2021 10:48:34 AM : INFO - Model save path checked..
21/02/2021 10:48:34 AM : INFO - config JSON path checked..
21/02/2021 10:48:34 AM : INFO - Tensorboard Visualization path checked..
21/02/2021 10:48:34 AM : INFO - Cleaning Visualization path of older tensorboard files...


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 

data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 3
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
filter text True
Confounders upsampled by 3 times. 
 From 750  samples to 2250
Saved confounder samples to: 
./dataset/train_upsampled_confounders_3x_times.jsonl
Loaded dataset contains  10750 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
21/02/2021 10:48:43 AM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
21/02/2021 10:48:43 AM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear): Linear(in_features=768, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-21 10:48:46.620063 


Epoch: 1/30,            
train_loss = 0.5709,  train_acc = 0.7268,  train_prec = 0.0934,  train_recall = 0.5851,  train_f1 = 0.1611,  train_aucroc = 0.6317,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.8032,  eval_acc = 0.5700,  eval_prec = 0.2186,  eval_recall = 0.7105,  eval_f1 = 0.3344,  eval_aucroc = 0.6732,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002016
Elapsed Time:  00:03:11.4421/02/2021 10:51:58 AM : INFO - New High Score! Saving model...

21/02/2021 10:51:59 AM : INFO - current patience: 0
21/02/2021 10:55:13 AM : INFO - New High Score! Saving model...

Epoch: 2/30,            
train_loss = 0.4286,  train_acc = 0.8138,  train_prec = 0.5336,  train_recall = 0.7306,  train_f1 = 0.6168,  train_aucroc = 0.8373,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7702,  eval_acc = 0.6380,  eval_prec = 0.3320,  eval_recall = 0.8367,  eval_f1 = 0.4754,  eval_aucroc = 0.7534,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002999
Elapsed Time:  00:06:26.54
21/02/2021 10:55:14 AM : INFO - current patience: 0

Epoch: 3/30,            
train_loss = 0.2507,  train_acc = 0.9061,  train_prec = 0.7880,  train_recall = 0.8657,  train_f1 = 0.8250,  train_aucroc = 0.9471,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.8882,  eval_acc = 0.6600,  eval_prec = 0.3846,  eval_recall = 0.8407,  eval_f1 = 0.5278,  eval_aucroc = 0.7680,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002995
Elapsed Time:  00:09:42.6021/02/2021 10:58:29 AM : INFO - New High Score! Saving model...

21/02/2021 10:58:30 AM : INFO - current patience: 0

Epoch: 4/30,            
train_loss = 0.1344,  train_acc = 0.9519,  train_prec = 0.9033,  train_recall = 0.9238,  train_f1 = 0.9134,  train_aucroc = 0.9840,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7813,  eval_acc = 0.7020,  eval_prec = 0.5992,  eval_recall = 0.7475,  eval_f1 = 0.6652,  eval_aucroc = 0.7656,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002986
Elapsed Time:  00:12:57.3221/02/2021 11:01:43 AM : INFO - current patience: 1


Epoch: 5/30,            
train_loss = 0.0843,  train_acc = 0.9738,  train_prec = 0.9473,  train_recall = 0.9588,  train_f1 = 0.9530,  train_aucroc = 0.9927,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4519,  eval_acc = 0.6560,  eval_prec = 0.3806,  eval_recall = 0.8319,  eval_f1 = 0.5222,  eval_aucroc = 0.7472,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002973
Elapsed Time:  00:16:09.1321/02/2021 11:04:55 AM : INFO - current patience: 2

21/02/2021 11:08:08 AM : INFO - current patience: 3

Epoch: 6/30,            
train_loss = 0.0685,  train_acc = 0.9770,  train_prec = 0.9566,  train_recall = 0.9614,  train_f1 = 0.9590,  train_aucroc = 0.9955,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4922,  eval_acc = 0.6720,  eval_prec = 0.4737,  eval_recall = 0.7748,  eval_f1 = 0.5879,  eval_aucroc = 0.7445,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002956
Elapsed Time:  00:19:21.75

Epoch: 7/30,            
train_loss = 0.0605,  train_acc = 0.9799,  train_prec = 0.9639,  train_recall = 0.9645,  train_f1 = 0.9642,  train_aucroc = 0.9959,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.2990,  eval_acc = 0.6960,  eval_prec = 0.6316,  eval_recall = 0.7189,  eval_f1 = 0.6724,  eval_aucroc = 0.7472,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002935
Elapsed Time:  00:22:34.5821/02/2021 11:11:21 AM : INFO - current patience: 4

21/02/2021 11:14:34 AM : INFO - current patience: 5

Epoch: 8/30,            
train_loss = 0.0723,  train_acc = 0.9748,  train_prec = 0.9497,  train_recall = 0.9601,  train_f1 = 0.9549,  train_aucroc = 0.9953,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1687,  eval_acc = 0.6760,  eval_prec = 0.4777,  eval_recall = 0.7815,  eval_f1 = 0.5930,  eval_aucroc = 0.7446,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002909
Elapsed Time:  00:25:47.96
21/02/2021 11:14:34 AM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs

----------------------------------------------------------------------------------------------------

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 66.000
Val AUC-ROC of best model = 76.798
Val precision of best model = 38.462
Val recall of best model = 84.071
Val f1 of best model = 52.778

--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
21/02/2021 11:14:34 AM : INFO - Using UNITER model ./model_checkpoints/meme.pt
21/02/2021 11:14:35 AM : INFO - Exporting dev_seen predictions...
21/02/2021 11:14:38 AM : INFO - Finished export of dev_seen predictions
21/02/2021 11:14:38 AM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=66.00%)
21/02/2021 11:14:38 AM : INFO - Export and testing on test_seen...
21/02/2021 11:14:44 AM : INFO - Finished export of test predictions
