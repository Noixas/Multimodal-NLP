21/02/2021 03:31:47 AM : INFO - Data path checked..
21/02/2021 03:31:47 AM : INFO - Model save path checked..
21/02/2021 03:31:47 AM : INFO - config JSON path checked..
21/02/2021 03:31:47 AM : INFO - Tensorboard Visualization path checked..
21/02/2021 03:31:47 AM : INFO - Cleaning Visualization path of older tensorboard files...


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 

data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 2
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
filter text True
Confounders upsampled by 2 times. 
 From 750  samples to 1500
Saved confounder samples to: 
./dataset/train_upsampled_confounders_2x_times.jsonl
Loaded dataset contains  10000 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
21/02/2021 03:31:55 AM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
21/02/2021 03:31:55 AM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear): Linear(in_features=768, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-21 03:31:58.751412 


Epoch: 1/30,            
train_loss = 0.5946,  train_acc = 0.7050,  train_prec = 0.0686,  train_recall = 0.6000,  train_f1 = 0.1231,  train_aucroc = 0.6120,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7106,  eval_acc = 0.5720,  eval_prec = 0.2186,  eval_recall = 0.7200,  eval_f1 = 0.3354,  eval_aucroc = 0.6634,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00001878
Elapsed Time:  00:03:01.3121/02/2021 03:35:00 AM : INFO - New High Score! Saving model...

21/02/2021 03:35:01 AM : INFO - current patience: 0

Epoch: 2/30,            
train_loss = 0.4581,  train_acc = 0.7912,  train_prec = 0.5310,  train_recall = 0.7046,  train_f1 = 0.6056,  train_aucroc = 0.8229,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7865,  eval_acc = 0.6360,  eval_prec = 0.3684,  eval_recall = 0.7778,  eval_f1 = 0.5000,  eval_aucroc = 0.7432,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00003000
Elapsed Time:  00:06:00.66
21/02/2021 03:37:59 AM : INFO - New High Score! Saving model...
21/02/2021 03:38:00 AM : INFO - current patience: 0

Epoch: 3/30,            
train_loss = 0.2758,  train_acc = 0.8929,  train_prec = 0.7764,  train_recall = 0.8555,  train_f1 = 0.8140,  train_aucroc = 0.9397,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.8608,  eval_acc = 0.6700,  eval_prec = 0.4818,  eval_recall = 0.7628,  eval_f1 = 0.5906,  eval_aucroc = 0.7515,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002996
Elapsed Time:  00:09:03.3621/02/2021 03:41:02 AM : INFO - New High Score! Saving model...

21/02/2021 03:41:03 AM : INFO - current patience: 0

Epoch: 4/30,            
train_loss = 0.1503,  train_acc = 0.9463,  train_prec = 0.8993,  train_recall = 0.9210,  train_f1 = 0.9100,  train_aucroc = 0.9819,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1034,  eval_acc = 0.6620,  eval_prec = 0.4130,  eval_recall = 0.8095,  eval_f1 = 0.5469,  eval_aucroc = 0.7624,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002987
Elapsed Time:  00:12:07.29
21/02/2021 03:44:06 AM : INFO - New High Score! Saving model...
21/02/2021 03:44:07 AM : INFO - current patience: 0

Epoch: 5/30,            
train_loss = 0.0962,  train_acc = 0.9697,  train_prec = 0.9470,  train_recall = 0.9524,  train_f1 = 0.9497,  train_aucroc = 0.9919,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3517,  eval_acc = 0.6640,  eval_prec = 0.4656,  eval_recall = 0.7616,  eval_f1 = 0.5779,  eval_aucroc = 0.7427,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002975
Elapsed Time:  00:15:11.3621/02/2021 03:47:10 AM : INFO - current patience: 1


Epoch: 6/30,            
train_loss = 0.0745,  train_acc = 0.9746,  train_prec = 0.9573,  train_recall = 0.9585,  train_f1 = 0.9579,  train_aucroc = 0.9957,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.5068,  eval_acc = 0.6660,  eval_prec = 0.4372,  eval_recall = 0.7941,  eval_f1 = 0.5640,  eval_aucroc = 0.7303,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002958
Elapsed Time:  00:18:20.5821/02/2021 03:50:19 AM : INFO - current patience: 2


Epoch: 7/30,            
train_loss = 0.0645,  train_acc = 0.9793,  train_prec = 0.9642,  train_recall = 0.9671,  train_f1 = 0.9657,  train_aucroc = 0.9962,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4754,  eval_acc = 0.6740,  eval_prec = 0.4818,  eval_recall = 0.7727,  eval_f1 = 0.5935,  eval_aucroc = 0.7391,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002937
Elapsed Time:  00:21:27.01
21/02/2021 03:53:25 AM : INFO - current patience: 3
21/02/2021 03:56:31 AM : INFO - current patience: 4

Epoch: 8/30,            
train_loss = 0.0691,  train_acc = 0.9756,  train_prec = 0.9589,  train_recall = 0.9602,  train_f1 = 0.9596,  train_aucroc = 0.9959,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.6108,  eval_acc = 0.6720,  eval_prec = 0.4332,  eval_recall = 0.8168,  eval_f1 = 0.5661,  eval_aucroc = 0.7254,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002912
Elapsed Time:  00:24:32.62

Epoch: 9/30,            
train_loss = 0.0575,  train_acc = 0.9816,  train_prec = 0.9652,  train_recall = 0.9736,  train_f1 = 0.9694,  train_aucroc = 0.9964,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.8092,  eval_acc = 0.6400,  eval_prec = 0.3806,  eval_recall = 0.7769,  eval_f1 = 0.5109,  eval_aucroc = 0.7220,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002882
Elapsed Time:  00:27:37.5121/02/2021 03:59:36 AM : INFO - current patience: 5


----------------------------------------------------------------------------------------------------

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 66.200
Val AUC-ROC of best model = 76.243
Val precision of best model = 41.296
Val recall of best model = 80.952
Val f1 of best model = 54.692

21/02/2021 03:59:36 AM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs
--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
21/02/2021 03:59:36 AM : INFO - Using UNITER model ./model_checkpoints/meme.pt
21/02/2021 03:59:37 AM : INFO - Exporting dev_seen predictions...
21/02/2021 03:59:40 AM : INFO - Finished export of dev_seen predictions
21/02/2021 03:59:40 AM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=66.20%)
21/02/2021 03:59:40 AM : INFO - Export and testing on test_seen...
21/02/2021 03:59:46 AM : INFO - Finished export of test predictions
