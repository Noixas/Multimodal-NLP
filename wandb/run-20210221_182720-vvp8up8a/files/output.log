21/02/2021 06:27:21 PM : INFO - Data path checked..

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 
21/02/2021 06:27:21 PM : INFO - Model save path checked..
21/02/2021 06:27:21 PM : INFO - config JSON path checked..
21/02/2021 06:27:21 PM : INFO - Tensorboard Visualization path checked..
21/02/2021 06:27:21 PM : INFO - Cleaning Visualization path of older tensorboard files...


data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1.0
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
no_normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 5
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
filter text True
Confounders upsampled by 5 times. 
 From 1903  samples to 9515
Upsample both parts of confounders, hateful and non hateful - option 2
Saved confounder samples to: 
./dataset/train_upsampled_confounders_5x_times.jsonl
Loaded dataset contains  18015 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
21/02/2021 06:27:35 PM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
21/02/2021 06:27:35 PM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear_1): Linear(in_features=768, out_features=384, bias=True)
  (activation): ReLU()
  (linear_2): Linear(in_features=384, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-21 18:27:38.612595 


Epoch: 1/30,            
train_loss = 0.5577,  train_acc = 0.6808,  train_prec = 0.7423,  train_recall = 0.6515,  train_f1 = 0.6939,  train_aucroc = 0.7712,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7685,  eval_acc = 0.6860,  eval_prec = 0.5142,  eval_recall = 0.7744,  eval_f1 = 0.6180,  eval_aucroc = 0.7420,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00003000
Elapsed Time:  00:05:18.9421/02/2021 06:32:57 PM : INFO - New High Score! Saving model...

21/02/2021 06:32:58 PM : INFO - current patience: 0

Epoch: 2/30,            
train_loss = 0.2149,  train_acc = 0.9198,  train_prec = 0.9128,  train_recall = 0.9219,  train_f1 = 0.9173,  train_aucroc = 0.9703,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.9080,  eval_acc = 0.6680,  eval_prec = 0.4696,  eval_recall = 0.7682,  eval_f1 = 0.5829,  eval_aucroc = 0.7389,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002997
Elapsed Time:  00:10:53.5221/02/2021 06:38:32 PM : INFO - current patience: 1


Epoch: 3/30,            
train_loss = 0.1008,  train_acc = 0.9683,  train_prec = 0.9649,  train_recall = 0.9699,  train_f1 = 0.9674,  train_aucroc = 0.9916,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1439,  eval_acc = 0.6540,  eval_prec = 0.4494,  eval_recall = 0.7500,  eval_f1 = 0.5620,  eval_aucroc = 0.7300,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002991
Elapsed Time:  00:16:36.6521/02/2021 06:44:15 PM : INFO - current patience: 2


Epoch: 4/30,            
train_loss = 0.0710,  train_acc = 0.9778,  train_prec = 0.9769,  train_recall = 0.9776,  train_f1 = 0.9772,  train_aucroc = 0.9954,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4273,  eval_acc = 0.6680,  eval_prec = 0.5142,  eval_recall = 0.7341,  eval_f1 = 0.6048,  eval_aucroc = 0.7322,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002980
Elapsed Time:  00:22:24.3821/02/2021 06:50:02 PM : INFO - current patience: 3


Epoch: 5/30,            
train_loss = 0.0601,  train_acc = 0.9820,  train_prec = 0.9814,  train_recall = 0.9817,  train_f1 = 0.9816,  train_aucroc = 0.9968,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3966,  eval_acc = 0.6760,  eval_prec = 0.4899,  eval_recall = 0.7707,  eval_f1 = 0.5990,  eval_aucroc = 0.7445,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002964
Elapsed Time:  00:28:12.2421/02/2021 06:55:50 PM : INFO - New High Score! Saving model...

21/02/2021 06:55:52 PM : INFO - current patience: 0

Epoch: 6/30,            
train_loss = 0.0699,  train_acc = 0.9769,  train_prec = 0.9759,  train_recall = 0.9766,  train_f1 = 0.9763,  train_aucroc = 0.9962,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4184,  eval_acc = 0.6600,  eval_prec = 0.5020,  eval_recall = 0.7251,  eval_f1 = 0.5933,  eval_aucroc = 0.7343,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002945
Elapsed Time:  00:34:01.56
21/02/2021 07:01:40 PM : INFO - current patience: 1

Epoch: 7/30,            
train_loss = 0.0620,  train_acc = 0.9796,  train_prec = 0.9785,  train_recall = 0.9796,  train_f1 = 0.9790,  train_aucroc = 0.9969,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4018,  eval_acc = 0.6660,  eval_prec = 0.4453,  eval_recall = 0.7857,  eval_f1 = 0.5685,  eval_aucroc = 0.7329,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002922
Elapsed Time:  00:39:46.13
21/02/2021 07:07:24 PM : INFO - current patience: 2

Epoch: 8/30,            
train_loss = 0.0601,  train_acc = 0.9802,  train_prec = 0.9786,  train_recall = 0.9807,  train_f1 = 0.9797,  train_aucroc = 0.9971,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4421,  eval_acc = 0.6740,  eval_prec = 0.4656,  eval_recall = 0.7877,  eval_f1 = 0.5852,  eval_aucroc = 0.7401,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002894
Elapsed Time:  00:45:36.5321/02/2021 07:13:15 PM : INFO - current patience: 3


Epoch: 9/30,            
train_loss = 0.0624,  train_acc = 0.9791,  train_prec = 0.9789,  train_recall = 0.9783,  train_f1 = 0.9786,  train_aucroc = 0.9970,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.5445,  eval_acc = 0.6660,  eval_prec = 0.4777,  eval_recall = 0.7564,  eval_f1 = 0.5856,  eval_aucroc = 0.7273,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002863
Elapsed Time:  00:51:23.8221/02/2021 07:19:02 PM : INFO - current patience: 4


Epoch: 10/30,            
train_loss = 0.0488,  train_acc = 0.9843,  train_prec = 0.9847,  train_recall = 0.9832,  train_f1 = 0.9840,  train_aucroc = 0.9982,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.6451,  eval_acc = 0.6560,  eval_prec = 0.4575,  eval_recall = 0.7483,  eval_f1 = 0.5678,  eval_aucroc = 0.7255,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002828
Elapsed Time:  00:57:11.1321/02/2021 07:24:49 PM : INFO - current patience: 5


----------------------------------------------------------------------------------------------------

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 67.600
Val AUC-ROC of best model = 74.451
Val precision of best model = 48.988
Val recall of best model = 77.070
Val f1 of best model = 59.901

--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
21/02/2021 07:24:49 PM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs
21/02/2021 07:24:49 PM : INFO - Using UNITER model ./model_checkpoints/meme.pt
21/02/2021 07:24:50 PM : INFO - Exporting dev_seen predictions...
21/02/2021 07:24:54 PM : INFO - Finished export of dev_seen predictions
21/02/2021 07:24:54 PM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=67.60%)
21/02/2021 07:24:54 PM : INFO - Export and testing on test_seen...
21/02/2021 07:25:00 PM : INFO - Finished export of test predictions
