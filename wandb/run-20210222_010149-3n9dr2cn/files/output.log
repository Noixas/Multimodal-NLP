22/02/2021 01:01:50 AM : INFO - Data path checked..

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 
22/02/2021 01:01:50 AM : INFO - Model save path checked..
22/02/2021 01:01:50 AM : INFO - config JSON path checked..
22/02/2021 01:01:50 AM : INFO - Tensorboard Visualization path checked..
22/02/2021 01:01:50 AM : INFO - Cleaning Visualization path of older tensorboard files...


data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1.0
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
no_normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 3
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
filter text True
Confounders upsampled by 3 times. 
 From 1903  samples to 5709
Upsample both parts of confounders, hateful and non hateful - option 2
Saved confounder samples to: 
./dataset/train_upsampled_confounders_3x_times.jsonl
Loaded dataset contains  14209 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
22/02/2021 01:02:01 AM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
22/02/2021 01:02:01 AM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear_1): Linear(in_features=768, out_features=384, bias=True)
  (activation): ReLU()
  (linear_2): Linear(in_features=384, out_features=192, bias=True)
  (linear_3): Linear(in_features=192, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-22 01:02:04.875960 


Epoch: 1/30,            
train_loss = 0.6061,  train_acc = 0.6578,  train_prec = 0.4552,  train_recall = 0.6887,  train_f1 = 0.5481,  train_aucroc = 0.7209,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.6625,  eval_acc = 0.6460,  eval_prec = 0.4049,  eval_recall = 0.7692,  eval_f1 = 0.5305,  eval_aucroc = 0.7559,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002670
Elapsed Time:  00:04:15.5622/02/2021 01:06:20 AM : INFO - New High Score! Saving model...

22/02/2021 01:06:21 AM : INFO - current patience: 0

Epoch: 2/30,            
train_loss = 0.2969,  train_acc = 0.8856,  train_prec = 0.8642,  train_recall = 0.8824,  train_f1 = 0.8732,  train_aucroc = 0.9426,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.7817,  eval_acc = 0.6660,  eval_prec = 0.4980,  eval_recall = 0.7410,  eval_f1 = 0.5956,  eval_aucroc = 0.7514,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002998
Elapsed Time:  00:09:03.9622/02/2021 01:11:08 AM : INFO - current patience: 1


Epoch: 3/30,            
train_loss = 0.1421,  train_acc = 0.9538,  train_prec = 0.9458,  train_recall = 0.9526,  train_f1 = 0.9492,  train_aucroc = 0.9836,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1976,  eval_acc = 0.6700,  eval_prec = 0.4534,  eval_recall = 0.7887,  eval_f1 = 0.5758,  eval_aucroc = 0.7605,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002992
Elapsed Time:  00:14:00.0122/02/2021 01:16:04 AM : INFO - New High Score! Saving model...

22/02/2021 01:16:06 AM : INFO - current patience: 0

Epoch: 4/30,            
train_loss = 0.0866,  train_acc = 0.9742,  train_prec = 0.9714,  train_recall = 0.9719,  train_f1 = 0.9717,  train_aucroc = 0.9927,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1083,  eval_acc = 0.6800,  eval_prec = 0.4251,  eval_recall = 0.8537,  eval_f1 = 0.5676,  eval_aucroc = 0.7596,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002982
Elapsed Time:  00:18:57.1922/02/2021 01:21:02 AM : INFO - current patience: 1


Epoch: 5/30,            
train_loss = 0.0711,  train_acc = 0.9790,  train_prec = 0.9758,  train_recall = 0.9782,  train_f1 = 0.9770,  train_aucroc = 0.9949,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.2544,  eval_acc = 0.6820,  eval_prec = 0.5061,  eval_recall = 0.7716,  eval_f1 = 0.6112,  eval_aucroc = 0.7627,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002968
Elapsed Time:  00:23:30.77
22/02/2021 01:25:35 AM : INFO - New High Score! Saving model...
22/02/2021 01:25:37 AM : INFO - current patience: 0

Epoch: 6/30,            
train_loss = 0.0675,  train_acc = 0.9778,  train_prec = 0.9756,  train_recall = 0.9756,  train_f1 = 0.9756,  train_aucroc = 0.9964,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3034,  eval_acc = 0.6540,  eval_prec = 0.5385,  eval_recall = 0.6927,  eval_f1 = 0.6059,  eval_aucroc = 0.7443,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002949
Elapsed Time:  00:28:04.2722/02/2021 01:30:09 AM : INFO - current patience: 1


Epoch: 7/30,            
train_loss = 0.0669,  train_acc = 0.9787,  train_prec = 0.9767,  train_recall = 0.9765,  train_f1 = 0.9766,  train_aucroc = 0.9965,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.3353,  eval_acc = 0.6840,  eval_prec = 0.4858,  eval_recall = 0.7947,  eval_f1 = 0.6030,  eval_aucroc = 0.7245,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002927
Elapsed Time:  00:32:36.64
22/02/2021 01:34:41 AM : INFO - current patience: 2

Epoch: 8/30,            
train_loss = 0.0610,  train_acc = 0.9817,  train_prec = 0.9796,  train_recall = 0.9802,  train_f1 = 0.9799,  train_aucroc = 0.9969,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.1086,  eval_acc = 0.6760,  eval_prec = 0.4858,  eval_recall = 0.7742,  eval_f1 = 0.5970,  eval_aucroc = 0.7537,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002900
Elapsed Time:  00:36:56.7322/02/2021 01:39:01 AM : INFO - current patience: 3


Epoch: 9/30,            
train_loss = 0.0614,  train_acc = 0.9805,  train_prec = 0.9759,  train_recall = 0.9812,  train_f1 = 0.9786,  train_aucroc = 0.9970,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.6380,  eval_acc = 0.6180,  eval_prec = 0.3198,  eval_recall = 0.7745,  eval_f1 = 0.4527,  eval_aucroc = 0.7300,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002869
Elapsed Time:  00:41:12.62
22/02/2021 01:43:17 AM : INFO - current patience: 4

Epoch: 10/30,            
train_loss = 0.0594,  train_acc = 0.9799,  train_prec = 0.9789,  train_recall = 0.9772,  train_f1 = 0.9780,  train_aucroc = 0.9976,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.6193,  eval_acc = 0.6600,  eval_prec = 0.4534,  eval_recall = 0.7619,  eval_f1 = 0.5685,  eval_aucroc = 0.7164,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002835
Elapsed Time:  00:45:29.7822/02/2021 01:47:34 AM : INFO - current patience: 5


----------------------------------------------------------------------------------------------------

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 68.200
Val AUC-ROC of best model = 76.269
Val precision of best model = 50.607
Val recall of best model = 77.160
Val f1 of best model = 61.125

--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
22/02/2021 01:47:34 AM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs
22/02/2021 01:47:34 AM : INFO - Using UNITER model ./model_checkpoints/meme.pt
22/02/2021 01:47:35 AM : INFO - Exporting dev_seen predictions...
22/02/2021 01:47:38 AM : INFO - Finished export of dev_seen predictions
22/02/2021 01:47:38 AM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=68.20%)
22/02/2021 01:47:38 AM : INFO - Export and testing on test_seen...
22/02/2021 01:47:44 AM : INFO - Finished export of test predictions
