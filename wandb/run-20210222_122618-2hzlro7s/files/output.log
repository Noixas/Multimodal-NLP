22/02/2021 12:26:21 PM : INFO - Data path checked..
22/02/2021 12:26:21 PM : INFO - Model save path checked..
22/02/2021 12:26:21 PM : INFO - config JSON path checked..
22/02/2021 12:26:21 PM : INFO - Tensorboard Visualization path checked..
22/02/2021 12:26:21 PM : INFO - Cleaning Visualization path of older tensorboard files...


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Running training with the following parameters: 

data_path : ./dataset
model_path : ./model_checkpoints
vis_path : ./vis_checkpoints
model_save_name : meme.pt
no_model_checkpoints : False
remove_checkpoints : False
config : config/uniter-base.json
feature_path : ./dataset/own_features
pretrained_model_file : uniter-base.pt
max_txt_len : 60
max_bb : 100
min_bb : 10
num_bb : 36
optimizer : adam
loss_func : bce_logits
optimize_for : aucroc
scheduler : warmup_cosine
beta1 : 0.9
beta2 : 0.999
batch_size : 16
num_workers : 0
gradient_accumulation : 2
max_grad_norm : 5
pos_wt : 1.8
lr : 3e-05
warmup_steps : 500
weight_decay : 0.001
max_epoch : 30
lr_decay_step : 3
lr_decay_factor : 0.8
patience : 5.0
early_stop_thresh : 0.001
seed : 43
log_every : 2000
fc_dim : 64
dropout : 0.2
filter_text : True
no_normalize_img : True
train_filename : train.jsonl
upsample_multiplier : 3
note : Base + pos wt 1.8
device : cuda
n_classes : 1

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
filter text True
Confounders upsampled by 3 times. 
 From 1903  samples to 5709
Upsample both parts of confounders, hateful and non hateful - option 2
Saved confounder samples to: 
./dataset/train_upsampled_confounders_3x_times.jsonl
Loaded dataset contains  14209 samples
filter text True
Loaded dataset contains  500 samples
filter text True
Loaded dataset contains  1000 samples
22/02/2021 12:26:32 PM : INFO - Using pretrained UNITER base model ./model_checkpoints/uniter-base.pt
22/02/2021 12:26:32 PM : INFO - Model config {
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "type_vocab_size": 2,
  "vocab_size": 28996
}

MemeUniter
MemeUniter(
  (uniter_model): UniterModel(
    (embeddings): UniterTextEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (img_embeddings): UniterImageEmbeddings(
      (img_linear): Linear(in_features=2048, out_features=768, bias=True)
      (img_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (pos_linear): Linear(in_features=7, out_features=768, bias=True)
      (mask_embedding): Embedding(2, 2048, padding_idx=0)
      (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): UniterEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): FusedLayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (linear_1): Linear(in_features=768, out_features=384, bias=True)
  (activation_1): ReLU()
  (linear_2): Linear(in_features=384, out_features=1, bias=True)
)


====================================================================================================
					 Training Network
====================================================================================================

Beginning training at:  2021-02-22 12:26:35.999527 


Epoch: 1/30,            
train_loss = 0.8632,  train_acc = 0.5506,  train_prec = 0.9003,  train_recall = 0.5040,  train_f1 = 0.6462,  train_aucroc = 0.6530,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 0.9159,  eval_acc = 0.6400,  eval_prec = 0.5425,  eval_recall = 0.6667,  eval_f1 = 0.5982,  eval_aucroc = 0.6874,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002670
Elapsed Time:  00:04:38.2322/02/2021 12:31:14 PM : INFO - New High Score! Saving model...

22/02/2021 12:31:15 PM : INFO - current patience: 0

Epoch: 2/30,            
train_loss = 0.5262,  train_acc = 0.8205,  train_prec = 0.8659,  train_recall = 0.7694,  train_f1 = 0.8148,  train_aucroc = 0.9024,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.0834,  eval_acc = 0.6600,  eval_prec = 0.5061,  eval_recall = 0.7225,  eval_f1 = 0.5952,  eval_aucroc = 0.7523,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002998
Elapsed Time:  00:09:15.3222/02/2021 12:35:51 PM : INFO - New High Score! Saving model...

22/02/2021 12:35:52 PM : INFO - current patience: 0

Epoch: 3/30,            
train_loss = 0.2413,  train_acc = 0.9349,  train_prec = 0.9472,  train_recall = 0.9132,  train_f1 = 0.9299,  train_aucroc = 0.9781,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.4325,  eval_acc = 0.6500,  eval_prec = 0.4332,  eval_recall = 0.7535,  eval_f1 = 0.5501,  eval_aucroc = 0.7417,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002992
Elapsed Time:  00:13:41.0622/02/2021 12:40:17 PM : INFO - current patience: 1


Epoch: 4/30,            
train_loss = 0.1350,  train_acc = 0.9671,  train_prec = 0.9696,  train_recall = 0.9588,  train_f1 = 0.9642,  train_aucroc = 0.9919,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 2.0287,  eval_acc = 0.6600,  eval_prec = 0.3968,  eval_recall = 0.8235,  eval_f1 = 0.5355,  eval_aucroc = 0.7651,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002982
Elapsed Time:  00:18:02.98
22/02/2021 12:44:38 PM : INFO - New High Score! Saving model...
22/02/2021 12:44:40 PM : INFO - current patience: 0

Epoch: 5/30,            
train_loss = 0.1046,  train_acc = 0.9766,  train_prec = 0.9785,  train_recall = 0.9703,  train_f1 = 0.9744,  train_aucroc = 0.9947,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.9480,  eval_acc = 0.6680,  eval_prec = 0.4494,  eval_recall = 0.7872,  eval_f1 = 0.5722,  eval_aucroc = 0.7475,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002968
Elapsed Time:  00:22:21.06
22/02/2021 12:48:57 PM : INFO - current patience: 1

Epoch: 6/30,            
train_loss = 0.1002,  train_acc = 0.9752,  train_prec = 0.9779,  train_recall = 0.9681,  train_f1 = 0.9730,  train_aucroc = 0.9958,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 1.8167,  eval_acc = 0.6640,  eval_prec = 0.5425,  eval_recall = 0.7090,  eval_f1 = 0.6147,  eval_aucroc = 0.7378,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002949
Elapsed Time:  00:26:34.5022/02/2021 12:53:10 PM : INFO - current patience: 2


Epoch: 7/30,            
train_loss = 0.0915,  train_acc = 0.9794,  train_prec = 0.9816,  train_recall = 0.9734,  train_f1 = 0.9775,  train_aucroc = 0.9962,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 2.4447,  eval_acc = 0.6460,  eval_prec = 0.4049,  eval_recall = 0.7692,  eval_f1 = 0.5305,  eval_aucroc = 0.7385,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002927
Elapsed Time:  00:30:47.33
22/02/2021 12:57:23 PM : INFO - current patience: 3

Epoch: 8/30,            
train_loss = 0.0912,  train_acc = 0.9763,  train_prec = 0.9775,  train_recall = 0.9707,  train_f1 = 0.9741,  train_aucroc = 0.9970,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 2.1217,  eval_acc = 0.6460,  eval_prec = 0.4899,  eval_recall = 0.7035,  eval_f1 = 0.5776,  eval_aucroc = 0.7251,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002900
Elapsed Time:  00:35:00.1122/02/2021 01:01:36 PM : INFO - current patience: 4


Epoch: 9/30,            
train_loss = 0.0887,  train_acc = 0.9792,  train_prec = 0.9784,  train_recall = 0.9760,  train_f1 = 0.9772,  train_aucroc = 0.9968,  train_opt_accuracy = -1.0000,  train_threshold = -1.0000            
eval_loss = 2.0697,  eval_acc = 0.6580,  eval_prec = 0.4737,  eval_recall = 0.7405,  eval_f1 = 0.5778,  eval_aucroc = 0.7455,  eval_opt_accuracy = -1.0000,  eval_threshold = -1.0000                
lr  =  0.00002869
Elapsed Time:  00:39:15.21

----------------------------------------------------------------------------------------------------
22/02/2021 01:05:51 PM : INFO - current patience: 5

--------------------------------------------------
Best Validation scores:
--------------------------------------------------

Val accuracy of best model = 66.000
Val AUC-ROC of best model = 76.512
Val precision of best model = 39.676
Val recall of best model = 82.353
Val f1 of best model = 53.552

--------------------------------------------------
		Evaluating on test set
--------------------------------------------------
22/02/2021 01:05:51 PM : INFO - Training terminated early because the Validation aucroc did not improve for  5.0  epochs
22/02/2021 01:05:51 PM : INFO - Using UNITER model ./model_checkpoints/meme.pt
22/02/2021 01:05:52 PM : INFO - Exporting dev_seen predictions...
22/02/2021 01:05:55 PM : INFO - Finished export of dev_seen predictions
22/02/2021 01:05:55 PM : INFO - Optimal threshold on validation dataset: 0.5000 (accuracy=66.00%)
22/02/2021 01:05:55 PM : INFO - Export and testing on test_seen...
22/02/2021 01:06:00 PM : INFO - Finished export of test predictions
